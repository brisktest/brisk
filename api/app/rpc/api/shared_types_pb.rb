# frozen_string_literal: true

# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: api/shared_types.proto

require 'google/protobuf'

require 'google/protobuf/timestamp_pb'

descriptor_data = "\n\x16\x61pi/shared_types.proto\x12\x03\x61pi\x1a\x1fgoogle/protobuf/timestamp.proto\"\xa4\x01\n\x08RepoInfo\x12\x12\n\nCommitHash\x18\x01 \x01(\t\x12\x0c\n\x04Repo\x18\x02 \x01(\t\x12\x0e\n\x06\x42ranch\x18\x03 \x01(\t\x12\x0b\n\x03Tag\x18\x04 \x01(\t\x12\x15\n\rCommitMessage\x18\x05 \x01(\t\x12\x14\n\x0c\x43ommitAuthor\x18\x06 \x01(\t\x12\x19\n\x11\x43ommitAuthorEmail\x18\x07 \x01(\t\x12\x11\n\tIsGitRepo\x18\x08 \x01(\x08\"\xc2\x01\n\rExecutionInfo\x12+\n\x07started\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12,\n\x08\x66inished\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x11\n\texit_code\x18\x03 \x01(\x05\x12\x14\n\x0crebuild_hash\x18\x04 \x01(\t\x12\x1d\n\x07\x63ommand\x18\x05 \x01(\x0b\x32\x0c.api.Command\x12\x0e\n\x06output\x18\x06 \x01(\t\"\xad\x03\n\x07\x43ommand\x12\x13\n\x0b\x63ommandline\x18\x01 \x01(\t\x12\x0c\n\x04\x61rgs\x18\x02 \x03(\t\x12\x15\n\rworkDirectory\x18\x03 \x01(\t\x12\x32\n\x0b\x65nvironment\x18\x04 \x03(\x0b\x32\x1d.api.Command.EnvironmentEntry\x12\x11\n\tisTestRun\x18\x05 \x01(\x08\x12\x13\n\x0blastCommand\x18\x06 \x01(\x08\x12\x16\n\x0esequenceNumber\x18\x07 \x01(\x05\x12\x14\n\x0cworkerNumber\x18\x08 \x01(\x05\x12\r\n\x05stage\x18\t \x01(\t\x12\x12\n\nisListTest\x18\x0b \x01(\x08\x12\x15\n\rtestFramework\x18\x0c \x01(\t\x12\x12\n\nbackground\x18\r \x01(\x08\x12\x18\n\x10totalWorkerCount\x18\x0e \x01(\x05\x12\x1a\n\x12\x63ommandConcurrency\x18\x0f \x01(\x05\x12\x13\n\x0bnoTestFiles\x18\x10 \x01(\x08\x12\x11\n\tcommandId\x18\x11 \x01(\t\x1a\x32\n\x10\x45nvironmentEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x42\x07Z\x05./apib\x06proto3"

pool = Google::Protobuf::DescriptorPool.generated_pool

begin
  pool.add_serialized_file(descriptor_data)
rescue TypeError
  # Compatibility code: will be removed in the next major version.
  require 'google/protobuf/descriptor_pb'
  parsed = Google::Protobuf::FileDescriptorProto.decode(descriptor_data)
  parsed.clear_dependency
  serialized = parsed.class.encode(parsed)
  file = pool.add_serialized_file(serialized)
  warn "Warning: Protobuf detected an import path issue while loading generated file #{__FILE__}"
  imports = [
    ['google.protobuf.Timestamp', 'google/protobuf/timestamp.proto']
  ]
  imports.each do |type_name, expected_filename|
    import_file = pool.lookup(type_name).file_descriptor
    if import_file.name != expected_filename
      warn "- #{file.name} imports #{expected_filename}, but that import was loaded as #{import_file.name}"
    end
  end
  warn 'Each proto file must use a consistent fully-qualified name.'
  warn 'This will become an error in the next major version.'
end

module Api
  RepoInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup('api.RepoInfo').msgclass
  ExecutionInfo = ::Google::Protobuf::DescriptorPool.generated_pool.lookup('api.ExecutionInfo').msgclass
  Command = ::Google::Protobuf::DescriptorPool.generated_pool.lookup('api.Command').msgclass
end
