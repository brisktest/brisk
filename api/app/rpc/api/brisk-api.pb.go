// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.11
// source: api/brisk-api.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JobRunStatus int32

const (
	JobRunStatus_completed JobRunStatus = 0
	JobRunStatus_failed    JobRunStatus = 1
)

// Enum value maps for JobRunStatus.
var (
	JobRunStatus_name = map[int32]string{
		0: "completed",
		1: "failed",
	}
	JobRunStatus_value = map[string]int32{
		"completed": 0,
		"failed":    1,
	}
)

func (x JobRunStatus) Enum() *JobRunStatus {
	p := new(JobRunStatus)
	*p = x
	return p
}

func (x JobRunStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobRunStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_brisk_api_proto_enumTypes[0].Descriptor()
}

func (JobRunStatus) Type() protoreflect.EnumType {
	return &file_api_brisk_api_proto_enumTypes[0]
}

func (x JobRunStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JobRunStatus.Descriptor instead.
func (JobRunStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_brisk_api_proto_rawDescGZIP(), []int{0}
}

type SplitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Alogorithm string   `protobuf:"bytes,1,opt,name=alogorithm,proto3" json:"alogorithm,omitempty"`
	NumBuckets int32    `protobuf:"varint,2,opt,name=num_buckets,json=numBuckets,proto3" json:"num_buckets,omitempty"`
	Filenames  []string `protobuf:"bytes,3,rep,name=filenames,proto3" json:"filenames,omitempty"`
}

func (x *SplitRequest) Reset() {
	*x = SplitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_brisk_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SplitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SplitRequest) ProtoMessage() {}

func (x *SplitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_brisk_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SplitRequest.ProtoReflect.Descriptor instead.
func (*SplitRequest) Descriptor() ([]byte, []int) {
	return file_api_brisk_api_proto_rawDescGZIP(), []int{0}
}

func (x *SplitRequest) GetAlogorithm() string {
	if x != nil {
		return x.Alogorithm
	}
	return ""
}

func (x *SplitRequest) GetNumBuckets() int32 {
	if x != nil {
		return x.NumBuckets
	}
	return 0
}

func (x *SplitRequest) GetFilenames() []string {
	if x != nil {
		return x.Filenames
	}
	return nil
}

type SplitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileLists []*TestFiles `protobuf:"bytes,1,rep,name=file_lists,json=fileLists,proto3" json:"file_lists,omitempty"`
}

func (x *SplitResponse) Reset() {
	*x = SplitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_brisk_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SplitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SplitResponse) ProtoMessage() {}

func (x *SplitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_brisk_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SplitResponse.ProtoReflect.Descriptor instead.
func (*SplitResponse) Descriptor() ([]byte, []int) {
	return file_api_brisk_api_proto_rawDescGZIP(), []int{1}
}

func (x *SplitResponse) GetFileLists() []*TestFiles {
	if x != nil {
		return x.FileLists
	}
	return nil
}

type TestFiles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filenames []string `protobuf:"bytes,1,rep,name=filenames,proto3" json:"filenames,omitempty"`
}

func (x *TestFiles) Reset() {
	*x = TestFiles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_brisk_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestFiles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestFiles) ProtoMessage() {}

func (x *TestFiles) ProtoReflect() protoreflect.Message {
	mi := &file_api_brisk_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestFiles.ProtoReflect.Descriptor instead.
func (*TestFiles) Descriptor() ([]byte, []int) {
	return file_api_brisk_api_proto_rawDescGZIP(), []int{2}
}

func (x *TestFiles) GetFilenames() []string {
	if x != nil {
		return x.Filenames
	}
	return nil
}

type MachineReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machine *Machine `protobuf:"bytes,1,opt,name=machine,proto3" json:"machine,omitempty"`
}

func (x *MachineReq) Reset() {
	*x = MachineReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_brisk_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MachineReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineReq) ProtoMessage() {}

func (x *MachineReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_brisk_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineReq.ProtoReflect.Descriptor instead.
func (*MachineReq) Descriptor() ([]byte, []int) {
	return file_api_brisk_api_proto_rawDescGZIP(), []int{3}
}

func (x *MachineReq) GetMachine() *Machine {
	if x != nil {
		return x.Machine
	}
	return nil
}

type MachineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Machine *Machine `protobuf:"bytes,1,opt,name=machine,proto3" json:"machine,omitempty"`
}

func (x *MachineResponse) Reset() {
	*x = MachineResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_brisk_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MachineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MachineResponse) ProtoMessage() {}

func (x *MachineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_brisk_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MachineResponse.ProtoReflect.Descriptor instead.
func (*MachineResponse) Descriptor() ([]byte, []int) {
	return file_api_brisk_api_proto_rawDescGZIP(), []int{4}
}

func (x *MachineResponse) GetMachine() *Machine {
	if x != nil {
		return x.Machine
	}
	return nil
}

type Machine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IpAddress string `protobuf:"bytes,1,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	Port      string `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`
	HostIp    string `protobuf:"bytes,3,opt,name=host_ip,json=hostIp,proto3" json:"host_ip,omitempty"`
	Uid       string `protobuf:"bytes,4,opt,name=uid,proto3" json:"uid,omitempty"`
	OsInfo    string `protobuf:"bytes,5,opt,name=os_info,json=osInfo,proto3" json:"os_info,omitempty"`
	HostUid   string `protobuf:"bytes,6,opt,name=host_uid,json=hostUid,proto3" json:"host_uid,omitempty"`
	Image     string `protobuf:"bytes,7,opt,name=image,proto3" json:"image,omitempty"`
	Type      string `protobuf:"bytes,8,opt,name=type,proto3" json:"type,omitempty"`
	State     string `protobuf:"bytes,9,opt,name=state,proto3" json:"state,omitempty"`
	Region    string `protobuf:"bytes,10,opt,name=region,proto3" json:"region,omitempty"`
	Cpus      uint32 `protobuf:"varint,11,opt,name=cpus,proto3" json:"cpus,omitempty"`
	Memory    uint32 `protobuf:"varint,12,opt,name=memory,proto3" json:"memory,omitempty"`
	Disk      uint32 `protobuf:"varint,13,opt,name=disk,proto3" json:"disk,omitempty"`
	JsonData  string `protobuf:"bytes,14,opt,name=json_data,json=jsonData,proto3" json:"json_data,omitempty"`
	Id        uint32 `protobuf:"varint,15,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *Machine) Reset() {
	*x = Machine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_brisk_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Machine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Machine) ProtoMessage() {}

func (x *Machine) ProtoReflect() protoreflect.Message {
	mi := &file_api_brisk_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Machine.ProtoReflect.Descriptor instead.
func (*Machine) Descriptor() ([]byte, []int) {
	return file_api_brisk_api_proto_rawDescGZIP(), []int{5}
}

func (x *Machine) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *Machine) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *Machine) GetHostIp() string {
	if x != nil {
		return x.HostIp
	}
	return ""
}

func (x *Machine) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Machine) GetOsInfo() string {
	if x != nil {
		return x.OsInfo
	}
	return ""
}

func (x *Machine) GetHostUid() string {
	if x != nil {
		return x.HostUid
	}
	return ""
}

func (x *Machine) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Machine) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Machine) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Machine) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Machine) GetCpus() uint32 {
	if x != nil {
		return x.Cpus
	}
	return 0
}

func (x *Machine) GetMemory() uint32 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *Machine) GetDisk() uint32 {
	if x != nil {
		return x.Disk
	}
	return 0
}

func (x *Machine) GetJsonData() string {
	if x != nil {
		return x.JsonData
	}
	return ""
}

func (x *Machine) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetAllProjectsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// not used at the moment
	Filter string `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *GetAllProjectsReq) Reset() {
	*x = GetAllProjectsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_brisk_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllProjectsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllProjectsReq) ProtoMessage() {}

func (x *GetAllProjectsReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_brisk_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllProjectsReq.ProtoReflect.Descriptor instead.
func (*GetAllProjectsReq) Descriptor() ([]byte, []int) {
	return file_api_brisk_api_proto_rawDescGZIP(), []int{6}
}

func (x *GetAllProjectsReq) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

type GetAllProjectsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Projects []*Project `protobuf:"bytes,1,rep,name=projects,proto3" json:"projects,omitempty"`
	Message  string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *GetAllProjectsResp) Reset() {
	*x = GetAllProjectsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_brisk_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllProjectsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllProjectsResp) ProtoMessage() {}

func (x *GetAllProjectsResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_brisk_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllProjectsResp.ProtoReflect.Descriptor instead.
func (*GetAllProjectsResp) Descriptor() ([]byte, []int) {
	return file_api_brisk_api_proto_rawDescGZIP(), []int{7}
}

func (x *GetAllProjectsResp) GetProjects() []*Project {
	if x != nil {
		return x.Projects
	}
	return nil
}

func (x *GetAllProjectsResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type InitProjectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// one of the following: rails, node, shell
	Framework string `protobuf:"bytes,1,opt,name=framework,proto3" json:"framework,omitempty"`
}

func (x *InitProjectReq) Reset() {
	*x = InitProjectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_brisk_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitProjectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitProjectReq) ProtoMessage() {}

func (x *InitProjectReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_brisk_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitProjectReq.ProtoReflect.Descriptor instead.
func (*InitProjectReq) Descriptor() ([]byte, []int) {
	return file_api_brisk_api_proto_rawDescGZIP(), []int{8}
}

func (x *InitProjectReq) GetFramework() string {
	if x != nil {
		return x.Framework
	}
	return ""
}

type InitProjectResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project *Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	Status  string   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *InitProjectResp) Reset() {
	*x = InitProjectResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_brisk_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InitProjectResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitProjectResp) ProtoMessage() {}

func (x *InitProjectResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_brisk_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitProjectResp.ProtoReflect.Descriptor instead.
func (*InitProjectResp) Descriptor() ([]byte, []int) {
	return file_api_brisk_api_proto_rawDescGZIP(), []int{9}
}

func (x *InitProjectResp) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

func (x *InitProjectResp) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type WorkerRegReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IpAddress   string `protobuf:"bytes,1,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	Port        string `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`
	HostIp      string `protobuf:"bytes,3,opt,name=host_ip,json=hostIp,proto3" json:"host_ip,omitempty"`
	Uid         string `protobuf:"bytes,4,opt,name=uid,proto3" json:"uid,omitempty"`
	WorkerImage string `protobuf:"bytes,5,opt,name=worker_image,json=workerImage,proto3" json:"worker_image,omitempty"`
	HostUid     string `protobuf:"bytes,6,opt,name=host_uid,json=hostUid,proto3" json:"host_uid,omitempty"`
}

func (x *WorkerRegReq) Reset() {
	*x = WorkerRegReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_brisk_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerRegReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerRegReq) ProtoMessage() {}

func (x *WorkerRegReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_brisk_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerRegReq.ProtoReflect.Descriptor instead.
func (*WorkerRegReq) Descriptor() ([]byte, []int) {
	return file_api_brisk_api_proto_rawDescGZIP(), []int{10}
}

func (x *WorkerRegReq) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *WorkerRegReq) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *WorkerRegReq) GetHostIp() string {
	if x != nil {
		return x.HostIp
	}
	return ""
}

func (x *WorkerRegReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *WorkerRegReq) GetWorkerImage() string {
	if x != nil {
		return x.WorkerImage
	}
	return ""
}

func (x *WorkerRegReq) GetHostUid() string {
	if x != nil {
		return x.HostUid
	}
	return ""
}

type UnreacheableReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Super        *Super `protobuf:"bytes,1,opt,name=super,proto3" json:"super,omitempty"`
	ProjectToken string `protobuf:"bytes,2,opt,name=projectToken,proto3" json:"projectToken,omitempty"`
}

func (x *UnreacheableReq) Reset() {
	*x = UnreacheableReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_brisk_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnreacheableReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnreacheableReq) ProtoMessage() {}

func (x *UnreacheableReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_brisk_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnreacheableReq.ProtoReflect.Descriptor instead.
func (*UnreacheableReq) Descriptor() ([]byte, []int) {
	return file_api_brisk_api_proto_rawDescGZIP(), []int{11}
}

func (x *UnreacheableReq) GetSuper() *Super {
	if x != nil {
		return x.Super
	}
	return nil
}

func (x *UnreacheableReq) GetProjectToken() string {
	if x != nil {
		return x.ProjectToken
	}
	return ""
}

type UnreachableResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Super *Super `protobuf:"bytes,1,opt,name=super,proto3" json:"super,omitempty"`
}

func (x *UnreachableResp) Reset() {
	*x = UnreachableResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_brisk_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnreachableResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnreachableResp) ProtoMessage() {}

func (x *UnreachableResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_brisk_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnreachableResp.ProtoReflect.Descriptor instead.
func (*UnreachableResp) Descriptor() ([]byte, []int) {
	return file_api_brisk_api_proto_rawDescGZIP(), []int{12}
}

func (x *UnreachableResp) GetSuper() *Super {
	if x != nil {
		return x.Super
	}
	return nil
}

type WorkersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WorkersReq) Reset() {
	*x = WorkersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_brisk_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkersReq) ProtoMessage() {}

func (x *WorkersReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_brisk_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkersReq.ProtoReflect.Descriptor instead.
func (*WorkersReq) Descriptor() ([]byte, []int) {
	return file_api_brisk_api_proto_rawDescGZIP(), []int{13}
}

type WorkersResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workers []*Worker `protobuf:"bytes,1,rep,name=workers,proto3" json:"workers,omitempty"`
}

func (x *WorkersResp) Reset() {
	*x = WorkersResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_brisk_api_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkersResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkersResp) ProtoMessage() {}

func (x *WorkersResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_brisk_api_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkersResp.ProtoReflect.Descriptor instead.
func (*WorkersResp) Descriptor() ([]byte, []int) {
	return file_api_brisk_api_proto_rawDescGZIP(), []int{14}
}

func (x *WorkersResp) GetWorkers() []*Worker {
	if x != nil {
		return x.Workers
	}
	return nil
}

type SuperRegReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IpAddress        string `protobuf:"bytes,1,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	Port             string `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`
	HostIp           string `protobuf:"bytes,3,opt,name=host_ip,json=hostIp,proto3" json:"host_ip,omitempty"`
	SyncPort         string `protobuf:"bytes,4,opt,name=sync_port,json=syncPort,proto3" json:"sync_port,omitempty"`
	ExternalEndpoint string `protobuf:"bytes,5,opt,name=external_endpoint,json=externalEndpoint,proto3" json:"external_endpoint,omitempty"`
	SyncEndpoint     string `protobuf:"bytes,6,opt,name=sync_endpoint,json=syncEndpoint,proto3" json:"sync_endpoint,omitempty"`
	Uid              string `protobuf:"bytes,7,opt,name=uid,proto3" json:"uid,omitempty"`
	HostUid          string `protobuf:"bytes,8,opt,name=host_uid,json=hostUid,proto3" json:"host_uid,omitempty"`
}

func (x *SuperRegReq) Reset() {
	*x = SuperRegReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_brisk_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuperRegReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuperRegReq) ProtoMessage() {}

func (x *SuperRegReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_brisk_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuperRegReq.ProtoReflect.Descriptor instead.
func (*SuperRegReq) Descriptor() ([]byte, []int) {
	return file_api_brisk_api_proto_rawDescGZIP(), []int{15}
}

func (x *SuperRegReq) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *SuperRegReq) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *SuperRegReq) GetHostIp() string {
	if x != nil {
		return x.HostIp
	}
	return ""
}

func (x *SuperRegReq) GetSyncPort() string {
	if x != nil {
		return x.SyncPort
	}
	return ""
}

func (x *SuperRegReq) GetExternalEndpoint() string {
	if x != nil {
		return x.ExternalEndpoint
	}
	return ""
}

func (x *SuperRegReq) GetSyncEndpoint() string {
	if x != nil {
		return x.SyncEndpoint
	}
	return ""
}

func (x *SuperRegReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *SuperRegReq) GetHostUid() string {
	if x != nil {
		return x.HostUid
	}
	return ""
}

type WorkerReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *WorkerReq) Reset() {
	*x = WorkerReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_brisk_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerReq) ProtoMessage() {}

func (x *WorkerReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_brisk_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerReq.ProtoReflect.Descriptor instead.
func (*WorkerReq) Descriptor() ([]byte, []int) {
	return file_api_brisk_api_proto_rawDescGZIP(), []int{16}
}

func (x *WorkerReq) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type ClearWorkersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SupervisorUid string `protobuf:"bytes,1,opt,name=supervisor_uid,json=supervisorUid,proto3" json:"supervisor_uid,omitempty"`
}

func (x *ClearWorkersReq) Reset() {
	*x = ClearWorkersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_brisk_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearWorkersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearWorkersReq) ProtoMessage() {}

func (x *ClearWorkersReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_brisk_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearWorkersReq.ProtoReflect.Descriptor instead.
func (*ClearWorkersReq) Descriptor() ([]byte, []int) {
	return file_api_brisk_api_proto_rawDescGZIP(), []int{17}
}

func (x *ClearWorkersReq) GetSupervisorUid() string {
	if x != nil {
		return x.SupervisorUid
	}
	return ""
}

type ClearWorkersResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *ClearWorkersResp) Reset() {
	*x = ClearWorkersResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_brisk_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearWorkersResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearWorkersResp) ProtoMessage() {}

func (x *ClearWorkersResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_brisk_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearWorkersResp.ProtoReflect.Descriptor instead.
func (*ClearWorkersResp) Descriptor() ([]byte, []int) {
	return file_api_brisk_api_proto_rawDescGZIP(), []int{18}
}

func (x *ClearWorkersResp) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type SuperReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SuperReq) Reset() {
	*x = SuperReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_brisk_api_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuperReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuperReq) ProtoMessage() {}

func (x *SuperReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_brisk_api_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuperReq.ProtoReflect.Descriptor instead.
func (*SuperReq) Descriptor() ([]byte, []int) {
	return file_api_brisk_api_proto_rawDescGZIP(), []int{19}
}

func (x *SuperReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type SuperResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Super *Super `protobuf:"bytes,1,opt,name=super,proto3" json:"super,omitempty"`
}

func (x *SuperResponse) Reset() {
	*x = SuperResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_brisk_api_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuperResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuperResponse) ProtoMessage() {}

func (x *SuperResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_brisk_api_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuperResponse.ProtoReflect.Descriptor instead.
func (*SuperResponse) Descriptor() ([]byte, []int) {
	return file_api_brisk_api_proto_rawDescGZIP(), []int{20}
}

func (x *SuperResponse) GetSuper() *Super {
	if x != nil {
		return x.Super
	}
	return nil
}

type CommandsRunReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CommandsRunReq) Reset() {
	*x = CommandsRunReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_brisk_api_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandsRunReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandsRunReq) ProtoMessage() {}

func (x *CommandsRunReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_brisk_api_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandsRunReq.ProtoReflect.Descriptor instead.
func (*CommandsRunReq) Descriptor() ([]byte, []int) {
	return file_api_brisk_api_proto_rawDescGZIP(), []int{21}
}

func (x *CommandsRunReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type WorkerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Worker *Worker `protobuf:"bytes,1,opt,name=worker,proto3" json:"worker,omitempty"`
}

func (x *WorkerResponse) Reset() {
	*x = WorkerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_brisk_api_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerResponse) ProtoMessage() {}

func (x *WorkerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_brisk_api_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerResponse.ProtoReflect.Descriptor instead.
func (*WorkerResponse) Descriptor() ([]byte, []int) {
	return file_api_brisk_api_proto_rawDescGZIP(), []int{22}
}

func (x *WorkerResponse) GetWorker() *Worker {
	if x != nil {
		return x.Worker
	}
	return nil
}

type GetWorkersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumWorkers    uint64 `protobuf:"varint,2,opt,name=num_workers,json=numWorkers,proto3" json:"num_workers,omitempty"`
	WorkerImage   string `protobuf:"bytes,3,opt,name=worker_image,json=workerImage,proto3" json:"worker_image,omitempty"`
	SupervisorUid string `protobuf:"bytes,4,opt,name=supervisor_uid,json=supervisorUid,proto3" json:"supervisor_uid,omitempty"`
	RebuildHash   string `protobuf:"bytes,5,opt,name=rebuild_hash,json=rebuildHash,proto3" json:"rebuild_hash,omitempty"`
}

func (x *GetWorkersReq) Reset() {
	*x = GetWorkersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_brisk_api_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkersReq) ProtoMessage() {}

func (x *GetWorkersReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_brisk_api_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkersReq.ProtoReflect.Descriptor instead.
func (*GetWorkersReq) Descriptor() ([]byte, []int) {
	return file_api_brisk_api_proto_rawDescGZIP(), []int{23}
}

func (x *GetWorkersReq) GetNumWorkers() uint64 {
	if x != nil {
		return x.NumWorkers
	}
	return 0
}

func (x *GetWorkersReq) GetWorkerImage() string {
	if x != nil {
		return x.WorkerImage
	}
	return ""
}

func (x *GetWorkersReq) GetSupervisorUid() string {
	if x != nil {
		return x.SupervisorUid
	}
	return ""
}

func (x *GetWorkersReq) GetRebuildHash() string {
	if x != nil {
		return x.RebuildHash
	}
	return ""
}

type GetWorkersResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Workers  []*Worker `protobuf:"bytes,1,rep,name=workers,proto3" json:"workers,omitempty"`
	JobrunId uint32    `protobuf:"varint,2,opt,name=jobrun_id,json=jobrunId,proto3" json:"jobrun_id,omitempty"`
}

func (x *GetWorkersResp) Reset() {
	*x = GetWorkersResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_brisk_api_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWorkersResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWorkersResp) ProtoMessage() {}

func (x *GetWorkersResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_brisk_api_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWorkersResp.ProtoReflect.Descriptor instead.
func (*GetWorkersResp) Descriptor() ([]byte, []int) {
	return file_api_brisk_api_proto_rawDescGZIP(), []int{24}
}

func (x *GetWorkersResp) GetWorkers() []*Worker {
	if x != nil {
		return x.Workers
	}
	return nil
}

func (x *GetWorkersResp) GetJobrunId() uint32 {
	if x != nil {
		return x.JobrunId
	}
	return 0
}

type GetSuperReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProjectToken     string `protobuf:"bytes,1,opt,name=project_token,json=projectToken,proto3" json:"project_token,omitempty"`
	UniqueInstanceId string `protobuf:"bytes,2,opt,name=unique_instance_id,json=uniqueInstanceId,proto3" json:"unique_instance_id,omitempty"`
	// this loosely corresponds to branch name
	Affinity string `protobuf:"bytes,3,opt,name=affinity,proto3" json:"affinity,omitempty"`
}

func (x *GetSuperReq) Reset() {
	*x = GetSuperReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_brisk_api_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSuperReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSuperReq) ProtoMessage() {}

func (x *GetSuperReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_brisk_api_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSuperReq.ProtoReflect.Descriptor instead.
func (*GetSuperReq) Descriptor() ([]byte, []int) {
	return file_api_brisk_api_proto_rawDescGZIP(), []int{25}
}

func (x *GetSuperReq) GetProjectToken() string {
	if x != nil {
		return x.ProjectToken
	}
	return ""
}

func (x *GetSuperReq) GetUniqueInstanceId() string {
	if x != nil {
		return x.UniqueInstanceId
	}
	return ""
}

func (x *GetSuperReq) GetAffinity() string {
	if x != nil {
		return x.Affinity
	}
	return ""
}

type GetSuperResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Super *Super `protobuf:"bytes,1,opt,name=super,proto3" json:"super,omitempty"`
}

func (x *GetSuperResp) Reset() {
	*x = GetSuperResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_brisk_api_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSuperResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSuperResp) ProtoMessage() {}

func (x *GetSuperResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_brisk_api_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSuperResp.ProtoReflect.Descriptor instead.
func (*GetSuperResp) Descriptor() ([]byte, []int) {
	return file_api_brisk_api_proto_rawDescGZIP(), []int{26}
}

func (x *GetSuperResp) GetSuper() *Super {
	if x != nil {
		return x.Super
	}
	return nil
}

type Super struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IpAddress        string `protobuf:"bytes,1,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	Port             string `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`
	State            string `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	Endpoint         string `protobuf:"bytes,5,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Id               uint64 `protobuf:"varint,6,opt,name=id,proto3" json:"id,omitempty"`
	SyncPort         string `protobuf:"bytes,7,opt,name=sync_port,json=syncPort,proto3" json:"sync_port,omitempty"`
	SyncEndpoint     string `protobuf:"bytes,8,opt,name=sync_endpoint,json=syncEndpoint,proto3" json:"sync_endpoint,omitempty"`
	ExternalEndpoint string `protobuf:"bytes,9,opt,name=external_endpoint,json=externalEndpoint,proto3" json:"external_endpoint,omitempty"`
	Uid              string `protobuf:"bytes,10,opt,name=uid,proto3" json:"uid,omitempty"`
	SetupRunAt       string `protobuf:"bytes,11,opt,name=setup_run_at,json=setupRunAt,proto3" json:"setup_run_at,omitempty"`
}

func (x *Super) Reset() {
	*x = Super{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_brisk_api_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Super) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Super) ProtoMessage() {}

func (x *Super) ProtoReflect() protoreflect.Message {
	mi := &file_api_brisk_api_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Super.ProtoReflect.Descriptor instead.
func (*Super) Descriptor() ([]byte, []int) {
	return file_api_brisk_api_proto_rawDescGZIP(), []int{27}
}

func (x *Super) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *Super) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *Super) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Super) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *Super) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Super) GetSyncPort() string {
	if x != nil {
		return x.SyncPort
	}
	return ""
}

func (x *Super) GetSyncEndpoint() string {
	if x != nil {
		return x.SyncEndpoint
	}
	return ""
}

func (x *Super) GetExternalEndpoint() string {
	if x != nil {
		return x.ExternalEndpoint
	}
	return ""
}

func (x *Super) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Super) GetSetupRunAt() string {
	if x != nil {
		return x.SetupRunAt
	}
	return ""
}

type Worker struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IpAddress          string                 `protobuf:"bytes,1,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	Port               string                 `protobuf:"bytes,2,opt,name=port,proto3" json:"port,omitempty"`
	BuildCommandsRunAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=build_commands_run_at,json=buildCommandsRunAt,proto3" json:"build_commands_run_at,omitempty"`
	State              string                 `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	Endpoint           string                 `protobuf:"bytes,5,opt,name=endpoint,proto3" json:"endpoint,omitempty"`
	Id                 uint64                 `protobuf:"varint,6,opt,name=id,proto3" json:"id,omitempty"`
	Uid                string                 `protobuf:"bytes,7,opt,name=uid,proto3" json:"uid,omitempty"`
	HostIp             string                 `protobuf:"bytes,8,opt,name=host_ip,json=hostIp,proto3" json:"host_ip,omitempty"`
	WorkerImage        string                 `protobuf:"bytes,9,opt,name=worker_image,json=workerImage,proto3" json:"worker_image,omitempty"`
	HostUid            string                 `protobuf:"bytes,10,opt,name=host_uid,json=hostUid,proto3" json:"host_uid,omitempty"`
}

func (x *Worker) Reset() {
	*x = Worker{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_brisk_api_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Worker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Worker) ProtoMessage() {}

func (x *Worker) ProtoReflect() protoreflect.Message {
	mi := &file_api_brisk_api_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Worker.ProtoReflect.Descriptor instead.
func (*Worker) Descriptor() ([]byte, []int) {
	return file_api_brisk_api_proto_rawDescGZIP(), []int{28}
}

func (x *Worker) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *Worker) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *Worker) GetBuildCommandsRunAt() *timestamppb.Timestamp {
	if x != nil {
		return x.BuildCommandsRunAt
	}
	return nil
}

func (x *Worker) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Worker) GetEndpoint() string {
	if x != nil {
		return x.Endpoint
	}
	return ""
}

func (x *Worker) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Worker) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *Worker) GetHostIp() string {
	if x != nil {
		return x.HostIp
	}
	return ""
}

func (x *Worker) GetWorkerImage() string {
	if x != nil {
		return x.WorkerImage
	}
	return ""
}

func (x *Worker) GetHostUid() string {
	if x != nil {
		return x.HostUid
	}
	return ""
}

type Project struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	ProjectToken string `protobuf:"bytes,2,opt,name=project_token,json=projectToken,proto3" json:"project_token,omitempty"`
	Username     string `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	OrgId        uint64 `protobuf:"varint,4,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	UserId       uint64 `protobuf:"varint,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Id           uint64 `protobuf:"varint,6,opt,name=id,proto3" json:"id,omitempty"`
	Concurrency  uint64 `protobuf:"varint,7,opt,name=concurrency,proto3" json:"concurrency,omitempty"`
	Framework    string `protobuf:"bytes,8,opt,name=framework,proto3" json:"framework,omitempty"`
	Image        string `protobuf:"bytes,9,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *Project) Reset() {
	*x = Project{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_brisk_api_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Project) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project) ProtoMessage() {}

func (x *Project) ProtoReflect() protoreflect.Message {
	mi := &file_api_brisk_api_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project.ProtoReflect.Descriptor instead.
func (*Project) Descriptor() ([]byte, []int) {
	return file_api_brisk_api_proto_rawDescGZIP(), []int{29}
}

func (x *Project) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Project) GetProjectToken() string {
	if x != nil {
		return x.ProjectToken
	}
	return ""
}

func (x *Project) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Project) GetOrgId() uint64 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *Project) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Project) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Project) GetConcurrency() uint64 {
	if x != nil {
		return x.Concurrency
	}
	return 0
}

func (x *Project) GetFramework() string {
	if x != nil {
		return x.Framework
	}
	return ""
}

func (x *Project) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

type GetProjectReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetProjectReq) Reset() {
	*x = GetProjectReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_brisk_api_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectReq) ProtoMessage() {}

func (x *GetProjectReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_brisk_api_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectReq.ProtoReflect.Descriptor instead.
func (*GetProjectReq) Descriptor() ([]byte, []int) {
	return file_api_brisk_api_proto_rawDescGZIP(), []int{30}
}

type FinishRunRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExitCode      int32        `protobuf:"varint,1,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	JobrunId      int32        `protobuf:"varint,2,opt,name=jobrun_id,json=jobrunId,proto3" json:"jobrun_id,omitempty"`
	Output        string       `protobuf:"bytes,4,opt,name=output,proto3" json:"output,omitempty"`
	Error         string       `protobuf:"bytes,5,opt,name=error,proto3" json:"error,omitempty"`
	Status        JobRunStatus `protobuf:"varint,6,opt,name=status,proto3,enum=api.JobRunStatus" json:"status,omitempty"`
	SupervisorUid string       `protobuf:"bytes,7,opt,name=supervisor_uid,json=supervisorUid,proto3" json:"supervisor_uid,omitempty"`
	WorkerRunInfo []*RunInfo   `protobuf:"bytes,8,rep,name=worker_run_info,json=workerRunInfo,proto3" json:"worker_run_info,omitempty"`
}

func (x *FinishRunRequest) Reset() {
	*x = FinishRunRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_brisk_api_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinishRunRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinishRunRequest) ProtoMessage() {}

func (x *FinishRunRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_brisk_api_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinishRunRequest.ProtoReflect.Descriptor instead.
func (*FinishRunRequest) Descriptor() ([]byte, []int) {
	return file_api_brisk_api_proto_rawDescGZIP(), []int{31}
}

func (x *FinishRunRequest) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *FinishRunRequest) GetJobrunId() int32 {
	if x != nil {
		return x.JobrunId
	}
	return 0
}

func (x *FinishRunRequest) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *FinishRunRequest) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *FinishRunRequest) GetStatus() JobRunStatus {
	if x != nil {
		return x.Status
	}
	return JobRunStatus_completed
}

func (x *FinishRunRequest) GetSupervisorUid() string {
	if x != nil {
		return x.SupervisorUid
	}
	return ""
}

func (x *FinishRunRequest) GetWorkerRunInfo() []*RunInfo {
	if x != nil {
		return x.WorkerRunInfo
	}
	return nil
}

type RunInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WorkerId         uint32                 `protobuf:"varint,1,opt,name=worker_id,json=workerId,proto3" json:"worker_id,omitempty"`
	RebuildHash      string                 `protobuf:"bytes,2,opt,name=rebuild_hash,json=rebuildHash,proto3" json:"rebuild_hash,omitempty"`
	ExitCode         string                 `protobuf:"bytes,3,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	Output           string                 `protobuf:"bytes,4,opt,name=output,proto3" json:"output,omitempty"`
	FinishedAt       *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=finished_at,json=finishedAt,proto3" json:"finished_at,omitempty"`
	StartedAt        *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	Error            string                 `protobuf:"bytes,7,opt,name=error,proto3" json:"error,omitempty"`
	Files            []string               `protobuf:"bytes,8,rep,name=files,proto3" json:"files,omitempty"`
	Uid              string                 `protobuf:"bytes,9,opt,name=uid,proto3" json:"uid,omitempty"`
	LogEncryptionKey string                 `protobuf:"bytes,10,opt,name=log_encryption_key,json=logEncryptionKey,proto3" json:"log_encryption_key,omitempty"`
	LogLocation      string                 `protobuf:"bytes,11,opt,name=log_location,json=logLocation,proto3" json:"log_location,omitempty"`
}

func (x *RunInfo) Reset() {
	*x = RunInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_brisk_api_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunInfo) ProtoMessage() {}

func (x *RunInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_brisk_api_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunInfo.ProtoReflect.Descriptor instead.
func (*RunInfo) Descriptor() ([]byte, []int) {
	return file_api_brisk_api_proto_rawDescGZIP(), []int{32}
}

func (x *RunInfo) GetWorkerId() uint32 {
	if x != nil {
		return x.WorkerId
	}
	return 0
}

func (x *RunInfo) GetRebuildHash() string {
	if x != nil {
		return x.RebuildHash
	}
	return ""
}

func (x *RunInfo) GetExitCode() string {
	if x != nil {
		return x.ExitCode
	}
	return ""
}

func (x *RunInfo) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *RunInfo) GetFinishedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.FinishedAt
	}
	return nil
}

func (x *RunInfo) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

func (x *RunInfo) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *RunInfo) GetFiles() []string {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *RunInfo) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *RunInfo) GetLogEncryptionKey() string {
	if x != nil {
		return x.LogEncryptionKey
	}
	return ""
}

func (x *RunInfo) GetLogLocation() string {
	if x != nil {
		return x.LogLocation
	}
	return ""
}

type FinishRunResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State string `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	Error string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *FinishRunResponse) Reset() {
	*x = FinishRunResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_brisk_api_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinishRunResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinishRunResponse) ProtoMessage() {}

func (x *FinishRunResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_brisk_api_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinishRunResponse.ProtoReflect.Descriptor instead.
func (*FinishRunResponse) Descriptor() ([]byte, []int) {
	return file_api_brisk_api_proto_rawDescGZIP(), []int{33}
}

func (x *FinishRunResponse) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *FinishRunResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type GetProjectResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Project *Project `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
}

func (x *GetProjectResp) Reset() {
	*x = GetProjectResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_brisk_api_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProjectResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectResp) ProtoMessage() {}

func (x *GetProjectResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_brisk_api_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectResp.ProtoReflect.Descriptor instead.
func (*GetProjectResp) Descriptor() ([]byte, []int) {
	return file_api_brisk_api_proto_rawDescGZIP(), []int{34}
}

func (x *GetProjectResp) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

type LoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nonce string `protobuf:"bytes,1,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_brisk_api_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_brisk_api_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_api_brisk_api_proto_rawDescGZIP(), []int{35}
}

func (x *LoginRequest) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

type LoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url         string       `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Description string       `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Status      string       `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Credentials *Credentials `protobuf:"bytes,4,opt,name=credentials,proto3" json:"credentials,omitempty"`
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_brisk_api_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_brisk_api_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_api_brisk_api_proto_rawDescGZIP(), []int{36}
}

func (x *LoginResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *LoginResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *LoginResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *LoginResponse) GetCredentials() *Credentials {
	if x != nil {
		return x.Credentials
	}
	return nil
}

type Credentials struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiToken string `protobuf:"bytes,1,opt,name=api_token,json=apiToken,proto3" json:"api_token,omitempty"`
	ApiKey   string `protobuf:"bytes,2,opt,name=api_key,json=apiKey,proto3" json:"api_key,omitempty"`
}

func (x *Credentials) Reset() {
	*x = Credentials{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_brisk_api_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Credentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Credentials) ProtoMessage() {}

func (x *Credentials) ProtoReflect() protoreflect.Message {
	mi := &file_api_brisk_api_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Credentials.ProtoReflect.Descriptor instead.
func (*Credentials) Descriptor() ([]byte, []int) {
	return file_api_brisk_api_proto_rawDescGZIP(), []int{37}
}

func (x *Credentials) GetApiToken() string {
	if x != nil {
		return x.ApiToken
	}
	return ""
}

func (x *Credentials) GetApiKey() string {
	if x != nil {
		return x.ApiKey
	}
	return ""
}

var File_api_brisk_api_proto protoreflect.FileDescriptor

var file_api_brisk_api_proto_rawDesc = []byte{
	0x0a, 0x13, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x72, 0x69, 0x73, 0x6b, 0x2d, 0x61, 0x70, 0x69, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x70, 0x69, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6d, 0x0a, 0x0c, 0x53,
	0x70, 0x6c, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x61,
	0x6c, 0x6f, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x61, 0x6c, 0x6f, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x6e,
	0x75, 0x6d, 0x5f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x6e, 0x75, 0x6d, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x09, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x3e, 0x0a, 0x0d, 0x53, 0x70,
	0x6c, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x0a, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52,
	0x09, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x73, 0x22, 0x29, 0x0a, 0x09, 0x54, 0x65,
	0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x65,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x34, 0x0a, 0x0a, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x52, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x22, 0x39, 0x0a, 0x0f, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26,
	0x0a, 0x07, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x07, 0x6d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x22, 0xe0, 0x02, 0x0a, 0x07, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x70,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x70, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x6f, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6f, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x6f, 0x73,
	0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x6f, 0x73,
	0x74, 0x55, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x70, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x70, 0x75, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x69, 0x73, 0x6b,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x64, 0x69, 0x73, 0x6b, 0x12, 0x1b, 0x0a, 0x09,
	0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6a, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2b, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x16,
	0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x58, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c,
	0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x22, 0x2e, 0x0a, 0x0e, 0x49, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b,
	0x22, 0x51, 0x0a, 0x0f, 0x49, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x26, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0xaa, 0x01, 0x0a, 0x0c, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65,
	0x67, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x6f, 0x73, 0x74, 0x5f,
	0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x70,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x75, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x6f, 0x73, 0x74, 0x55, 0x69, 0x64,
	0x22, 0x57, 0x0a, 0x0f, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x65, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x05, 0x73, 0x75, 0x70, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x52, 0x05,
	0x73, 0x75, 0x70, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f,
	0x6a, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x33, 0x0a, 0x0f, 0x55, 0x6e, 0x72,
	0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x05,
	0x73, 0x75, 0x70, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x52, 0x05, 0x73, 0x75, 0x70, 0x65, 0x72, 0x22, 0x0c,
	0x0a, 0x0a, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x22, 0x34, 0x0a, 0x0b,
	0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x25, 0x0a, 0x07, 0x77,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x07, 0x77, 0x6f, 0x72, 0x6b, 0x65,
	0x72, 0x73, 0x22, 0xf5, 0x01, 0x0a, 0x0b, 0x53, 0x75, 0x70, 0x65, 0x72, 0x52, 0x65, 0x67, 0x52,
	0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x70,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x70, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x79, 0x6e, 0x63, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x65,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x79, 0x6e, 0x63,
	0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x73, 0x79, 0x6e, 0x63, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x68, 0x6f, 0x73, 0x74, 0x55, 0x69, 0x64, 0x22, 0x1d, 0x0a, 0x09, 0x57, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x38, 0x0a, 0x0f, 0x43, 0x6c, 0x65,
	0x61, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0e,
	0x73, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72,
	0x55, 0x69, 0x64, 0x22, 0x2a, 0x0a, 0x10, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x57, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x1a, 0x0a, 0x08, 0x53, 0x75, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x31, 0x0a, 0x0d, 0x53,
	0x75, 0x70, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x20, 0x0a, 0x05,
	0x73, 0x75, 0x70, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x52, 0x05, 0x73, 0x75, 0x70, 0x65, 0x72, 0x22, 0x20,
	0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x35, 0x0a, 0x0e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x23, 0x0a, 0x06, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52,
	0x06, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x22, 0x9d, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x57,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x75, 0x6d,
	0x5f, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x6e, 0x75, 0x6d, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x73, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f,
	0x72, 0x55, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x48, 0x61, 0x73, 0x68, 0x22, 0x54, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x57, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x25, 0x0a, 0x07, 0x77, 0x6f, 0x72,
	0x6b, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x07, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x6f, 0x62, 0x72, 0x75, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x6a, 0x6f, 0x62, 0x72, 0x75, 0x6e, 0x49, 0x64, 0x22, 0x7c, 0x0a,
	0x0b, 0x47, 0x65, 0x74, 0x53, 0x75, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x0d,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x2c, 0x0a, 0x12, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x75,
	0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x61, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x61, 0x66, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x22, 0x30, 0x0a, 0x0c, 0x47,
	0x65, 0x74, 0x53, 0x75, 0x70, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x20, 0x0a, 0x05, 0x73,
	0x75, 0x70, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x52, 0x05, 0x73, 0x75, 0x70, 0x65, 0x72, 0x22, 0x9f, 0x02,
	0x0a, 0x05, 0x53, 0x75, 0x70, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x70, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x70, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x79, 0x6e, 0x63, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x79, 0x6e, 0x63, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x79, 0x6e,
	0x63, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x73, 0x79, 0x6e, 0x63, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x2b,
	0x0a, 0x11, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x65, 0x6e, 0x64, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x20, 0x0a,
	0x0c, 0x73, 0x65, 0x74, 0x75, 0x70, 0x5f, 0x72, 0x75, 0x6e, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x74, 0x75, 0x70, 0x52, 0x75, 0x6e, 0x41, 0x74, 0x22,
	0xb5, 0x02, 0x0a, 0x06, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x70,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x4d, 0x0a,
	0x15, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x5f,
	0x72, 0x75, 0x6e, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x12, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x52, 0x75, 0x6e, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x68, 0x6f, 0x73, 0x74, 0x49, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x6f, 0x72,
	0x6b, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x68, 0x6f, 0x73, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x68, 0x6f, 0x73, 0x74, 0x55, 0x69, 0x64, 0x22, 0xf4, 0x01, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63,
	0x6f, 0x6e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x72,
	0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66,
	0x72, 0x61, 0x6d, 0x65, 0x77, 0x6f, 0x72, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x0f,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x22,
	0x82, 0x02, 0x0a, 0x10, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x65, 0x78, 0x69, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6a, 0x6f, 0x62, 0x72, 0x75, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6a, 0x6f, 0x62, 0x72, 0x75, 0x6e, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x29, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x75, 0x70, 0x65, 0x72,
	0x76, 0x69, 0x73, 0x6f, 0x72, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x73, 0x75, 0x70, 0x65, 0x72, 0x76, 0x69, 0x73, 0x6f, 0x72, 0x55, 0x69, 0x64, 0x12, 0x34,
	0x0a, 0x0f, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x72, 0x75, 0x6e, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x52, 0x75,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x75, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x85, 0x03, 0x0a, 0x07, 0x52, 0x75, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1b, 0x0a, 0x09, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x6c,
	0x6f, 0x67, 0x5f, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x6f, 0x67, 0x45, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x67,
	0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6c, 0x6f, 0x67, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3f, 0x0a, 0x11,
	0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x38, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x26, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x07,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x22, 0x24, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x8f, 0x01,
	0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x32, 0x0a, 0x0b, 0x63,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x73, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x22,
	0x43, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x61, 0x70, 0x69, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x61, 0x70, 0x69, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x61,
	0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x70,
	0x69, 0x4b, 0x65, 0x79, 0x2a, 0x29, 0x0a, 0x0c, 0x4a, 0x6f, 0x62, 0x52, 0x75, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x10, 0x01, 0x32,
	0x47, 0x0a, 0x09, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x3a, 0x0a, 0x0f,
	0x53, 0x70, 0x6c, 0x69, 0x74, 0x46, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xba, 0x01, 0x0a, 0x05, 0x49, 0x6e, 0x66,
	0x72, 0x61, 0x12, 0x3a, 0x0a, 0x0f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x61, 0x63,
	0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3c,
	0x0a, 0x11, 0x44, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x63, 0x68,
	0x69, 0x6e, 0x65, 0x12, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69,
	0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x0c,
	0x44, 0x72, 0x61, 0x69, 0x6e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x0f, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x3b, 0x0a, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x32,
	0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x30, 0x01, 0x32, 0x98, 0x04, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12,
	0x3c, 0x0a, 0x09, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x75, 0x6e, 0x12, 0x15, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x37, 0x0a,
	0x0a, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x1a,
	0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72,
	0x6b, 0x65, 0x72, 0x73, 0x46, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x12, 0x47, 0x65, 0x74,
	0x53, 0x75, 0x70, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x70, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x1a, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x75, 0x70, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x46, 0x6f,
	0x72, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47,
	0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x16, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x57, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x73, 0x46, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x14, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x57,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0b,
	0x49, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x13, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x1a, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x6f, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41,
	0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x16, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x1a, 0x17, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50,
	0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x32, 0xa7, 0x02,
	0x0a, 0x07, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x12, 0x31, 0x0a, 0x08, 0x46, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x57, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x57, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x10,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x52, 0x75, 0x6e,
	0x12, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x52,
	0x75, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x57, 0x6f, 0x72, 0x6b,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x08,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x57,
	0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x33, 0x0a, 0x0a, 0x44, 0x65, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x12, 0x0e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x1a, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x63, 0x65, 0x6e, 0x74, 0x6c, 0x79, 0x44, 0x65, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x65, 0x64, 0x12, 0x0f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x32, 0x9c, 0x02, 0x0a, 0x06, 0x53, 0x75, 0x70, 0x65,
	0x72, 0x73, 0x12, 0x2f, 0x0a, 0x08, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x12, 0x0d,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12,
	0x10, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x52, 0x65, 0x67, 0x52, 0x65,
	0x71, 0x1a, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x0a, 0x44, 0x65, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x75, 0x70, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x75, 0x70, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x16, 0x4d, 0x61,
	0x72, 0x6b, 0x53, 0x75, 0x70, 0x65, 0x72, 0x41, 0x73, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x55, 0x6e, 0x72, 0x65, 0x61,
	0x63, 0x68, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x63, 0x68, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x00, 0x12, 0x32, 0x0a, 0x0b, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x65, 0x74, 0x75,
	0x70, 0x12, 0x0d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x1a, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x61, 0x70, 0x69, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_brisk_api_proto_rawDescOnce sync.Once
	file_api_brisk_api_proto_rawDescData = file_api_brisk_api_proto_rawDesc
)

func file_api_brisk_api_proto_rawDescGZIP() []byte {
	file_api_brisk_api_proto_rawDescOnce.Do(func() {
		file_api_brisk_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_brisk_api_proto_rawDescData)
	})
	return file_api_brisk_api_proto_rawDescData
}

var file_api_brisk_api_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_brisk_api_proto_msgTypes = make([]protoimpl.MessageInfo, 38)
var file_api_brisk_api_proto_goTypes = []interface{}{
	(JobRunStatus)(0),             // 0: api.JobRunStatus
	(*SplitRequest)(nil),          // 1: api.SplitRequest
	(*SplitResponse)(nil),         // 2: api.SplitResponse
	(*TestFiles)(nil),             // 3: api.TestFiles
	(*MachineReq)(nil),            // 4: api.MachineReq
	(*MachineResponse)(nil),       // 5: api.MachineResponse
	(*Machine)(nil),               // 6: api.Machine
	(*GetAllProjectsReq)(nil),     // 7: api.GetAllProjectsReq
	(*GetAllProjectsResp)(nil),    // 8: api.GetAllProjectsResp
	(*InitProjectReq)(nil),        // 9: api.InitProjectReq
	(*InitProjectResp)(nil),       // 10: api.InitProjectResp
	(*WorkerRegReq)(nil),          // 11: api.WorkerRegReq
	(*UnreacheableReq)(nil),       // 12: api.UnreacheableReq
	(*UnreachableResp)(nil),       // 13: api.UnreachableResp
	(*WorkersReq)(nil),            // 14: api.WorkersReq
	(*WorkersResp)(nil),           // 15: api.WorkersResp
	(*SuperRegReq)(nil),           // 16: api.SuperRegReq
	(*WorkerReq)(nil),             // 17: api.WorkerReq
	(*ClearWorkersReq)(nil),       // 18: api.ClearWorkersReq
	(*ClearWorkersResp)(nil),      // 19: api.ClearWorkersResp
	(*SuperReq)(nil),              // 20: api.SuperReq
	(*SuperResponse)(nil),         // 21: api.SuperResponse
	(*CommandsRunReq)(nil),        // 22: api.CommandsRunReq
	(*WorkerResponse)(nil),        // 23: api.WorkerResponse
	(*GetWorkersReq)(nil),         // 24: api.GetWorkersReq
	(*GetWorkersResp)(nil),        // 25: api.GetWorkersResp
	(*GetSuperReq)(nil),           // 26: api.GetSuperReq
	(*GetSuperResp)(nil),          // 27: api.GetSuperResp
	(*Super)(nil),                 // 28: api.Super
	(*Worker)(nil),                // 29: api.Worker
	(*Project)(nil),               // 30: api.Project
	(*GetProjectReq)(nil),         // 31: api.GetProjectReq
	(*FinishRunRequest)(nil),      // 32: api.FinishRunRequest
	(*RunInfo)(nil),               // 33: api.RunInfo
	(*FinishRunResponse)(nil),     // 34: api.FinishRunResponse
	(*GetProjectResp)(nil),        // 35: api.GetProjectResp
	(*LoginRequest)(nil),          // 36: api.LoginRequest
	(*LoginResponse)(nil),         // 37: api.LoginResponse
	(*Credentials)(nil),           // 38: api.Credentials
	(*timestamppb.Timestamp)(nil), // 39: google.protobuf.Timestamp
}
var file_api_brisk_api_proto_depIdxs = []int32{
	3,  // 0: api.SplitResponse.file_lists:type_name -> api.TestFiles
	6,  // 1: api.MachineReq.machine:type_name -> api.Machine
	6,  // 2: api.MachineResponse.machine:type_name -> api.Machine
	30, // 3: api.GetAllProjectsResp.projects:type_name -> api.Project
	30, // 4: api.InitProjectResp.project:type_name -> api.Project
	28, // 5: api.UnreacheableReq.super:type_name -> api.Super
	28, // 6: api.UnreachableResp.super:type_name -> api.Super
	29, // 7: api.WorkersResp.workers:type_name -> api.Worker
	28, // 8: api.SuperResponse.super:type_name -> api.Super
	29, // 9: api.WorkerResponse.worker:type_name -> api.Worker
	29, // 10: api.GetWorkersResp.workers:type_name -> api.Worker
	28, // 11: api.GetSuperResp.super:type_name -> api.Super
	39, // 12: api.Worker.build_commands_run_at:type_name -> google.protobuf.Timestamp
	0,  // 13: api.FinishRunRequest.status:type_name -> api.JobRunStatus
	33, // 14: api.FinishRunRequest.worker_run_info:type_name -> api.RunInfo
	39, // 15: api.RunInfo.finished_at:type_name -> google.protobuf.Timestamp
	39, // 16: api.RunInfo.started_at:type_name -> google.protobuf.Timestamp
	30, // 17: api.GetProjectResp.project:type_name -> api.Project
	38, // 18: api.LoginResponse.credentials:type_name -> api.Credentials
	1,  // 19: api.Splitting.SplitForProject:input_type -> api.SplitRequest
	4,  // 20: api.Infra.RegisterMachine:input_type -> api.MachineReq
	4,  // 21: api.Infra.DeRegisterMachine:input_type -> api.MachineReq
	4,  // 22: api.Infra.DrainMachine:input_type -> api.MachineReq
	36, // 23: api.Users.Login:input_type -> api.LoginRequest
	32, // 24: api.Projects.FinishRun:input_type -> api.FinishRunRequest
	31, // 25: api.Projects.GetProject:input_type -> api.GetProjectReq
	24, // 26: api.Projects.GetWorkersForProject:input_type -> api.GetWorkersReq
	26, // 27: api.Projects.GetSuperForProject:input_type -> api.GetSuperReq
	24, // 28: api.Projects.GetAdditionalWorkersForProject:input_type -> api.GetWorkersReq
	18, // 29: api.Projects.ClearWorkersForProject:input_type -> api.ClearWorkersReq
	9,  // 30: api.Projects.InitProject:input_type -> api.InitProjectReq
	7,  // 31: api.Projects.GetAllProjects:input_type -> api.GetAllProjectsReq
	17, // 32: api.Workers.Finished:input_type -> api.WorkerReq
	22, // 33: api.Workers.BuildCommandsRun:input_type -> api.CommandsRunReq
	11, // 34: api.Workers.Register:input_type -> api.WorkerRegReq
	17, // 35: api.Workers.DeRegister:input_type -> api.WorkerReq
	14, // 36: api.Workers.GetRecentlyDeregistered:input_type -> api.WorkersReq
	20, // 37: api.Supers.Finished:input_type -> api.SuperReq
	16, // 38: api.Supers.Register:input_type -> api.SuperRegReq
	20, // 39: api.Supers.DeRegister:input_type -> api.SuperReq
	12, // 40: api.Supers.MarkSuperAsUnreachable:input_type -> api.UnreacheableReq
	20, // 41: api.Supers.RecordSetup:input_type -> api.SuperReq
	2,  // 42: api.Splitting.SplitForProject:output_type -> api.SplitResponse
	5,  // 43: api.Infra.RegisterMachine:output_type -> api.MachineResponse
	5,  // 44: api.Infra.DeRegisterMachine:output_type -> api.MachineResponse
	5,  // 45: api.Infra.DrainMachine:output_type -> api.MachineResponse
	37, // 46: api.Users.Login:output_type -> api.LoginResponse
	34, // 47: api.Projects.FinishRun:output_type -> api.FinishRunResponse
	35, // 48: api.Projects.GetProject:output_type -> api.GetProjectResp
	25, // 49: api.Projects.GetWorkersForProject:output_type -> api.GetWorkersResp
	27, // 50: api.Projects.GetSuperForProject:output_type -> api.GetSuperResp
	25, // 51: api.Projects.GetAdditionalWorkersForProject:output_type -> api.GetWorkersResp
	19, // 52: api.Projects.ClearWorkersForProject:output_type -> api.ClearWorkersResp
	10, // 53: api.Projects.InitProject:output_type -> api.InitProjectResp
	8,  // 54: api.Projects.GetAllProjects:output_type -> api.GetAllProjectsResp
	23, // 55: api.Workers.Finished:output_type -> api.WorkerResponse
	23, // 56: api.Workers.BuildCommandsRun:output_type -> api.WorkerResponse
	23, // 57: api.Workers.Register:output_type -> api.WorkerResponse
	23, // 58: api.Workers.DeRegister:output_type -> api.WorkerResponse
	15, // 59: api.Workers.GetRecentlyDeregistered:output_type -> api.WorkersResp
	21, // 60: api.Supers.Finished:output_type -> api.SuperResponse
	21, // 61: api.Supers.Register:output_type -> api.SuperResponse
	21, // 62: api.Supers.DeRegister:output_type -> api.SuperResponse
	13, // 63: api.Supers.MarkSuperAsUnreachable:output_type -> api.UnreachableResp
	21, // 64: api.Supers.RecordSetup:output_type -> api.SuperResponse
	42, // [42:65] is the sub-list for method output_type
	19, // [19:42] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_api_brisk_api_proto_init() }
func file_api_brisk_api_proto_init() {
	if File_api_brisk_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_brisk_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SplitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_brisk_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SplitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_brisk_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestFiles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_brisk_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MachineReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_brisk_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MachineResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_brisk_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Machine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_brisk_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllProjectsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_brisk_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllProjectsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_brisk_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitProjectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_brisk_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InitProjectResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_brisk_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerRegReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_brisk_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnreacheableReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_brisk_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnreachableResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_brisk_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_brisk_api_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkersResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_brisk_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuperRegReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_brisk_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_brisk_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearWorkersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_brisk_api_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClearWorkersResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_brisk_api_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuperReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_brisk_api_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuperResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_brisk_api_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandsRunReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_brisk_api_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_brisk_api_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_brisk_api_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWorkersResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_brisk_api_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSuperReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_brisk_api_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSuperResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_brisk_api_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Super); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_brisk_api_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Worker); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_brisk_api_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Project); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_brisk_api_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_brisk_api_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinishRunRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_brisk_api_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_brisk_api_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinishRunResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_brisk_api_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProjectResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_brisk_api_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_brisk_api_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_brisk_api_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Credentials); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_brisk_api_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   38,
			NumExtensions: 0,
			NumServices:   6,
		},
		GoTypes:           file_api_brisk_api_proto_goTypes,
		DependencyIndexes: file_api_brisk_api_proto_depIdxs,
		EnumInfos:         file_api_brisk_api_proto_enumTypes,
		MessageInfos:      file_api_brisk_api_proto_msgTypes,
	}.Build()
	File_api_brisk_api_proto = out.File
	file_api_brisk_api_proto_rawDesc = nil
	file_api_brisk_api_proto_goTypes = nil
	file_api_brisk_api_proto_depIdxs = nil
}
